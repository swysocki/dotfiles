---
- hosts: 127.0.0.1
  connection: local
  become: 'yes'
  vars:
    user:
      username: "swysocki"
      ssh_pub_key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKlnFHI5swpZl5FG+BINqcr0TcAuOhYl9isMxgGyXkFU primary"
      default_shell: "zsh"
      email: "swysocki@gmail.com"
      name: "Scott Wysocki"

  tasks:
    - name: install common tools
      ansible.builtin.package:
        name: "{{ item }}"
      loop: 
        - git
        - tmux
        - neovim
        - ripgrep
        - fzf
        - htop
        - virtualenv
        - zsh

    - name: create users
      ansible.builtin.user:
        name: "{{ user.username }}"
        shell: "/bin/{{ user.default_shell }}"
        groups: sudo

    - name: set authorized keys
      ansible.posix.authorized_key:
        user: "{{ user.username }}"
        state: present
        key: "{{ user.ssh_pub_key }}"

    - name: allow passwordless sudo
      ansible.builtin.lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%sudo'
        line: '%sudo ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: add email to git config
      community.general.git_config:
        name: user.email
        scope: global
        value: "{{ user.email }}"
      become_user: "{{ user.username }}"

    - name: add username to git config
      community.general.git_config:
        name: user.name
        scope: global
        value: "{{ user.name }}"
      become_user: "{{ user.username }}"

    - name: check for omz installation
      ansible.builtin.stat:
        path: "/home/{{ user.username }}/.oh-my-zsh"
      register: omz

    - name: install oh-my-zsh
      #ansible.builtin.shell:
      shell:
        cmd: wget -qO - https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | bash -
      become_user: "{{ user.username }}"
      when: user.default_shell == "zsh" and not omz.stat.exists

    - name: install auto-suggestion plugin
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-autosuggestions
        dest: ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions
      become_user: "{{ user.username }}"
      when: user.default_shell == "zsh"

      #- name: enable zsh plugins
      #ansible.builtin.lineinfile:
      #  path: ~/.zshrc
      #  regexp: '^plugins\=\(.*\)'
      #  line: 'plugins=(git fzf zsh-autosuggestions)'
      #become_user: "{{ user.username }}"
      #when: user.default_shell == "zsh"

    - name: add fzf settings for bash
      ansible.builtin.copy:
        dest: /etc/profile.d/fzf.sh
        content: |
          #!/bin/bash
          source /usr/share/doc/fzf/examples/key-bindings.bash
          source /usr/share/doc/fzf/examples/completion.bash
        owner: root
        group: root
        mode: '644'
      when: user.default_shell == "bash"

    - name: install git bash prompt for existing users
      ansible.builtin.git:
        repo: https://github.com/magicmonty/bash-git-prompt.git
        dest: "/home/{{ user.username }}/.bash-git-prompt"
        depth: 1
      when: user.default_shell == "bash"

    - name: add git bash prompt to bashrc
      ansible.builtin.copy:
        dest: /etc/profile.d/git-bash-prompt.sh
        content: |
          if [ -f "$HOME/.bash-git-prompt/gitprompt.sh" ]; then
            GIT_PROMPT_ONLY_IN_REPO=1
            GIT_PROMPT_THEME=Single_line_Minimalist
            source $HOME/.bash-git-prompt/gitprompt.sh
          fi
        owner: root
        group: root
        mode: '644'
      when: user.default_shell == "bash"

    - name: create vim plug directory 
      ansible.builtin.file:
        path: "/home/{{ user.username }}/.local/share/nvim/site/autoload/"
        state: directory
        owner: "{{ user.username }}"
        group: "{{ user.username }}"

    - name: install vim plug for neovim
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        dest: "/home/{{ user.username }}/.local/share/nvim/site/autoload/plug.vim"
        owner: "{{ user.username }}"
        group: "{{ user.username }}"

    - name: create a python virtualenv for neovim
      ansible.builtin.pip:
        name:
          - pynvim
          - black
          - msgpack>=1.0
        virtualenv: "/home/{{ user.username }}/.local/share/nvim/.venv"
      become_user: "{{ user.username }}"

    - name: make a directory for virtualenvs
      ansible.builtin.file:
        path: "/home/{{ user.username }}/.virtualenvs"
        state: directory
        owner: "{{ user.username }}"
        group: "{{ user.username }}"

    - name: make code repo directory
      ansible.builtin.file:
        path: "/home/{{ user.username }}/.config/nvim/"
        state: directory
        owner: "{{ user.username }}"
        group: "{{ user.username }}"

    - name: clone dotfiles
      ansible.builtin.git:
        repo: https://github.com/swysocki/dotfiles
        dest: "/home/{{ user.username }}/devel/repos/dotfiles"
        depth: 1
      become_user: "{{ user.username }}"

    - name: link neovim config
      ansible.builtin.file:
        src: "/home/{{ user.username }}/devel/repos/dotfiles/neovim"
        dest: "/home/{{ user.username }}/.config/nvim/init.vim"
        owner: "{{ user.username }}"
        group: "{{ user.username }}"
        state: link

    - name: link tmux config
      ansible.builtin.file:
        src: "/home/{{ user.username }}/devel/repos/dotfiles/tmux.conf"
        dest: "/home/{{ user.username }}/.tmux.conf"
        owner: "{{ user.username }}"
        group: "{{ user.username }}"
        state: link

    - name: link zsh config
      ansible.builtin.file:
        src: "/home/{{ user.username }}/devel/repos/dotfiles/zshrc"
        dest: "/home/{{ user.username }}/.zshrc"
        owner: "{{ user.username }}"
        group: "{{ user.username }}"
        state: link
        force: yes

