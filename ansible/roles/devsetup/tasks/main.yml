---
- name: run debian tasks
  ansible.builtin.include_tasks: debian.yml
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: run macos tasks
  ansible.builtin.include_tasks: macos.yml
  when: ansible_os_family == "Darwin"

- name: add email to git config
  community.general.git_config:
    name: user.email
    scope: global
    value: "{{ user.email }}"
  become_user: "{{ user.username }}"

- name: add username to git config
  community.general.git_config:
    name: user.name
    scope: global
    value: "{{ user.name }}"
  become_user: "{{ user.username }}"

- name: check for omz installation
  ansible.builtin.stat:
    path: "{{ home_path }}/.oh-my-zsh"
  register: omz

- name: install oh-my-zsh
  #ansible.builtin.shell:
  shell:
    cmd: wget -qO - https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | bash -
  become_user: "{{ user.username }}"
  when: user.default_shell == "zsh" and not omz.stat.exists

- name: install zsh plugins
  ansible.builtin.git:
    repo: "{{ item.project }}"
    dest: "~/.oh-my-zsh/custom/plugins/{{ item.proj_name }}"
  become_user: "{{ user.username }}"
  when: user.default_shell == "zsh"
  with_items:
    - {proj_name: "zsh-autosuggestions", project: "https://github.com/zsh-users/zsh-autosuggestions.git"}
    - {proj_name: "forgit", project: "https://github.com/wfxr/forgit.git"}

- name: add pipx packages
  community.general.pipx:
    name: "{{ item }}"
    executable: "{{ pipx_path }}"
  become_user: "{{ user.username }}"
  loop:
    - black
    - flake8
    - isort
    - poetry
    - pytest
    - yamllint

- name: install neovim python package globally
  ansible.builtin.pip:
    name: pynvim
    executable: "{{ pip_version }}"

- name: remove pipx packages
  community.general.pipx:
    name: pyright
    executable: "{{ pipx_path }}"
  become_user: "{{ user.username }}"

- name: create vim plug directory
  ansible.builtin.file:
    path: "{{ home_path }}/.local/share/nvim/site/autoload/"
    state: directory
    owner: "{{ user.username }}"
    group: "{{ group_name }}"

- name: install vim plug for neovim
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    dest: "{{ home_path }}/.local/share/nvim/site/autoload/plug.vim"
    owner: "{{ user.username }}"
    group: "{{ group_name }}"

- name: make config directories
  ansible.builtin.file:
    path: "{{ home_path }}/{{ item }}"
    state: directory
    owner: "{{ user.username }}"
    group: "{{ group_name }}"
  with_items:
    - '.config/nvim/'
    - '.config/yamllint'
    - '.config/wezterm'

- name: clone dotfiles
  ansible.builtin.git:
    repo: https://github.com/swysocki/dotfiles
    dest: "{{ home_path }}/{{ repos_path }}/dotfiles"
    depth: 1
  become_user: "{{ user.username }}"

- name: link configs
  ansible.builtin.file:
    src: "{{ home_path }}/{{ repos_path }}/dotfiles/{{ item.source }}"
    dest: "{{ home_path }}/{{ item.destination }}"
    owner: "{{ user.username }}"
    group: "{{ group_name }}"
    force: yes
    state: link
  with_items:
    - {source: 'config/nvim', destination: '.config/nvim'}
    - {source: 'config/tmux.conf', destination: '.tmux.conf'}
    - {source: 'config/zshrc', destination: '.zshrc'}
    - {source: 'config/yamllint.yml', destination: '.config/yamllint/config'}
    - {source: 'config/alias.zsh', destination: '.oh-my-zsh/custom/alias.zsh'}
    - {source: 'config/wezterm.lua', destination: '.config/wezterm/wezterm.lua'}
