---
- name: help message
  debug:
    - msg: "Broken, probably, fix before relying on me!"

- name: set variables for Linux
  set_fact:
    group_name: "{{ user.username }}"
    pipx_path: "/home/{{ user.username }}/.local/bin/pipx"
    home_path: "/home/{{ user.username }}"

- name: install common tools
  ansible.builtin.package:
    name: "{{ item }}"
  loop:
    - acl
    - fzf
    - git
    - htop
    - jsonnet
    - python3-pip
    - python3-venv
    - ripgrep
    - tmux
    - virtualenv
    - zsh

- name: install tools with snap
  community.general.snap:
    name: nvim
    classic: 'yes'
  when: ansible_distribution == "Ubuntu"

- name: create users
  ansible.builtin.user:
    name: "{{ user.username }}"
    shell: "/bin/{{ user.default_shell }}"
    groups: sudo

- name: set authorized keys
  ansible.posix.authorized_key:
    user: "{{ user.username }}"
    state: present
    key: "{{ user.ssh_pub_key }}"

- name: allow passwordless sudo
  ansible.builtin.lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%sudo'
    line: '%sudo ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'

- name: install pipx using pip
  ansible.builtin.pip:
    name: pipx
    extra_args: --user
  become_user: "{{ user.username }}"

- name: ensure pipx path
  ansible.builtin.shell:
    cmd: python3 -m pipx ensurepath
  become: 'yes'
  become_user: "{{ user.username }}"
